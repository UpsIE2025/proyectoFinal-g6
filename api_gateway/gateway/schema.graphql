type Estudiante {
  ID: ID!
  Estado: Boolean!
  Nombre: String!
  Apellido: String!
  Direccion: String!
  Cursos: [Curso]
}

type Curso {
  ID: ID!
  Estado: Boolean!
  Nombre: String!
  Estudiantes: [Estudiante]
}

type Query {
  estudiante(ID: ID!): Estudiante
  estudiantes: [Estudiante]
  curso(ID: ID!): Curso
  cursos: [Curso]
  cursosPorEstudiante(ID_Estudiante: ID!): [Curso]
  estudiantesPorCurso(ID_Curso: ID!): [Estudiante]
}

type Mutation {
  crearEstudiante(
    Estado: Boolean!
    Nombre: String!
    Apellido: String!
    Direccion: String!
  ): Estudiante
  actualizarEstudiante(
    ID: ID!
    Estado: Boolean
    Nombre: String
    Apellido: String
    Direccion: String
  ): Estudiante
  eliminarEstudiante(ID: ID!): Estudiante
  crearCurso(Estado: Boolean!, Nombre: String!): Curso
  actualizarCurso(ID: ID!, Estado: Boolean, Nombre: String): Curso
  eliminarCurso(ID: ID!): Curso
  matricularEstudiante(EstudianteID: ID!, CursoID: ID!): Estudiante_Curso
  desmatricularEstudiante(EstudianteID: ID!, CursoID: ID!): Estudiante_Curso
}

type Estudiante_Curso {
  ID: ID!
  EstudianteID: ID!
  CursoID: ID!
  Estado: Boolean!
}
